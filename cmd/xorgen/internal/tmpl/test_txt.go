// Code generated by xorgen, DO NOT EDIT.
package tmpl

import (
	"bytes"
	"compress/gzip"
	"github.com/saylorsolutions/gocryptx/pkg/xor"
	"io"
)

var (
	keyTest_txt    = []byte{0x56, 0x29, 0xc8, 0xb5, 0x58, 0x90, 0x2, 0x83, 0x99, 0x21, 0xaf, 0xa5, 0x7b, 0x3f, 0x3b, 0x35, 0xd6, 0x0, 0xfe, 0x12, 0xec, 0xfe, 0x50, 0x5e, 0xbc, 0x6e, 0x9c, 0xb6, 0xa3, 0x2, 0xdc, 0x63, 0x2b, 0xf9, 0xfb, 0x88, 0x9b, 0xbc}
	dataTest_txt   = []byte{0xe1, 0x99, 0xe4, 0xfe, 0x50, 0x5e, 0xbc, 0x6e, 0x9e, 0x49, 0xd1, 0x56, 0xf4, 0x2a, 0x6, 0xd7, 0xaa, 0x40, 0xd6, 0x91, 0x78, 0x67, 0x84, 0xfa, 0xd, 0xb8, 0xcb, 0xcb, 0xb5, 0x70, 0x87, 0x6b, 0xb3, 0x10, 0xf6, 0x7c, 0x87, 0x48, 0xb4, 0x47, 0xc4, 0xb0, 0x7e, 0x14, 0xf1, 0xa3, 0xd7, 0xfb, 0xa2, 0x6, 0xdc, 0x63, 0xd4, 0x6, 0x50, 0x9d, 0x80, 0x36, 0x70, 0x29, 0xc8, 0xb5}
	offsetTest_txt = 18
)

func UnscreenTest_txt() ([]byte, error) {
	r, err := xor.NewReader(bytes.NewReader(dataTest_txt), keyTest_txt, offsetTest_txt)
	if err != nil {
		return nil, err
	}
	uncompress, err := gzip.NewReader(r)
	if err != nil {
		return nil, err
	}
	var out bytes.Buffer
	_, err = io.Copy(&out, uncompress)
	if err != nil {
		return nil, err
	}
	uncompress.Close()
	return out.Bytes(), nil
}

func StreamTest_txt() (io.Reader, error) {
	r, err := xor.NewReader(bytes.NewReader(dataTest_txt), keyTest_txt, offsetTest_txt)
	if err != nil {
		return nil, err
	}
	return gzip.NewReader(r)
}
