// Code generated by xorgen, DO NOT EDIT.
package tmpl

import (
	"bytes"
	"compress/gzip"
	"github.com/saylorsolutions/gocryptx/pkg/xor"
	"io"
)

var (
	keyTest_txt    = []byte{0x9f, 0xfe, 0xfb, 0xc2, 0x8a, 0x3, 0x5c, 0x5f, 0x7d, 0x68, 0x42, 0x75, 0x50, 0x12, 0x9d, 0xec, 0xc3, 0x4f, 0xdf, 0x98, 0x75, 0x2d, 0xcc, 0xf3, 0xf3, 0xf4, 0x9b, 0xd3, 0x7, 0x92, 0xf0, 0xf1, 0x51, 0x63, 0x3a, 0xbf, 0x5f, 0x58}
	dataTest_txt   = []byte{0xee, 0xda, 0x6b, 0x3a, 0xbf, 0x5f, 0x58, 0x9f, 0xfc, 0x4, 0xb0, 0xde, 0x2b, 0x15, 0x72, 0x53, 0x39, 0x8a, 0x38, 0x7d, 0x3c, 0xd3, 0xa0, 0x8c, 0x1a, 0xf7, 0x51, 0x3d, 0x1, 0x9d, 0xdb, 0x3d, 0x3c, 0xb4, 0x1e, 0x4e, 0xc3, 0xb8, 0xbb, 0x4, 0x4b, 0x74, 0x91, 0x15, 0x15, 0x52, 0xb5, 0xb6, 0xc3, 0x8e, 0x3, 0x5c, 0xa0, 0x82, 0xc3, 0x57, 0x6e, 0xda, 0x34, 0x9d, 0xec, 0xc3}
	offsetTest_txt = 31
)

func UnscreenTest_txt() ([]byte, error) {
	r, err := xor.NewReader(bytes.NewReader(dataTest_txt), keyTest_txt, offsetTest_txt)
	if err != nil {
		return nil, err
	}
	uncompress, err := gzip.NewReader(r)
	if err != nil {
		return nil, err
	}
	var out bytes.Buffer
	_, err = io.Copy(&out, uncompress)
	if err != nil {
		return nil, err
	}
	uncompress.Close()
	return out.Bytes(), nil
}

func StreamTest_txt() (io.Reader, error) {
	r, err := xor.NewReader(bytes.NewReader(dataTest_txt), keyTest_txt, offsetTest_txt)
	if err != nil {
		return nil, err
	}
	return gzip.NewReader(r)
}
